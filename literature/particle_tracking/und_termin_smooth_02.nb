(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    106781,       2230]
NotebookOptionsPosition[    104875,       2167]
NotebookOutlinePosition[    105221,       2182]
CellTagsIndexPosition[    105178,       2179]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"g", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"q", "*", 
         RowBox[{"(", 
          RowBox[{"x", "-", "x1"}], ")"}]}], "+", 
        RowBox[{"r", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "x1"}], ")"}], "3"]}]}], ")"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "p"}], "*", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "x1"}], ")"}], "2"]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gi", "=", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "p"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x1", "-", "xt"}], ")"}], "2"]}]], " ", 
       RowBox[{"(", 
        RowBox[{"r", "+", 
         RowBox[{"p", " ", 
          RowBox[{"(", 
           RowBox[{"q", "+", 
            RowBox[{"r", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"x1", "-", "xt"}], ")"}], "2"]}]}], ")"}]}]}], ")"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["p", "2"]}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{"g", "/.", 
     RowBox[{"x", "\[Rule]", "x1"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[PartialD]", "x"], " ", "g"}], "/.", 
     RowBox[{"x", "\[Rule]", "x1"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "x1", 
      RowBox[{"+", "\[Infinity]"}]], 
     RowBox[{"g", 
      RowBox[{"\[DifferentialD]", "x"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "xt", 
      RowBox[{"+", "\[Infinity]"}]], 
     RowBox[{"g", 
      RowBox[{"\[DifferentialD]", "x"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "x1", 
      RowBox[{"+", "\[Infinity]"}]], 
     RowBox[{"gi", 
      RowBox[{"\[DifferentialD]", "xt"}]}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.5037917301071463`*^9, 3.503791911893544*^9}, {
   3.503791997178422*^9, 3.503792009760142*^9}, {3.503792095210029*^9, 
   3.5037921445138493`*^9}, {3.5037923912209597`*^9, 
   3.5037924297371635`*^9}, {3.5037924676833334`*^9, 
   3.5037924914206915`*^9}, {3.5037926165508485`*^9, 
   3.5037926600443363`*^9}, {3.5037952834053836`*^9, 3.503795283849409*^9}, {
   3.503795451486997*^9, 3.503795452912079*^9}, {3.5037985495611973`*^9, 
   3.5037986180051117`*^9}, {3.5037986580544024`*^9, 3.5037986618136177`*^9}, 
   3.5037987095923505`*^9, {3.5038013394317684`*^9, 3.503801341624894*^9}, {
   3.503801531026727*^9, 3.5038017254878497`*^9}, {3.5038017592487807`*^9, 
   3.5038017763227572`*^9}, {3.5038018312619*^9, 3.5038018614016237`*^9}, {
   3.503802947645753*^9, 3.5038029480507765`*^9}, {3.5039431247624598`*^9, 
   3.5039431453985233`*^9}, {3.503944085077491*^9, 3.503944103190302*^9}, {
   3.5039442088038626`*^9, 3.5039442595109324`*^9}, {3.5039443086758485`*^9, 
   3.503944323912372*^9}, {3.503944644874465*^9, 3.503944646537631*^9}, {
   3.503944710203997*^9, 3.503944750316008*^9}, {3.5039447866526413`*^9, 
   3.503944799060882*^9}, {3.5039448703920145`*^9, 3.503944879290904*^9}, 
   3.5039449244244175`*^9, {3.5039740163259563`*^9, 3.5039740167939825`*^9}, {
   3.5040291204165373`*^9, 3.5040291533024178`*^9}, {3.5040292040713215`*^9, 
   3.504029257818396*^9}, {3.5040292992257643`*^9, 3.5040293693497753`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.5037918325300045`*^9, 3.5037918444416857`*^9}, 
   3.5037919137126484`*^9, {3.5037920040348144`*^9, 3.5037920111202197`*^9}, 
   3.503792149492134*^9, 3.5037924954109197`*^9, 3.503792666195688*^9, 
   3.5037952862525463`*^9, 3.5037954576933527`*^9, 3.5037986677079544`*^9, 
   3.5037987106404104`*^9, 3.503800652586483*^9, 3.5038013458191338`*^9, 
   3.503801468748165*^9, {3.503801539311201*^9, 3.5038015484287224`*^9}, {
   3.503801593716313*^9, 3.503801646272319*^9}, 3.503801721736635*^9, {
   3.5038018339550533`*^9, 3.5038018634427404`*^9}, {3.5038029508879385`*^9, 
   3.5038029622725897`*^9}, 3.503944348686849*^9, 3.5039446675927362`*^9, 
   3.5039448037433505`*^9, 3.503944885855561*^9, 3.503944956704645*^9, {
   3.504029260846569*^9, 3.5040292734422894`*^9}, 3.5040293752431126`*^9}],

Cell[BoxData["q"], "Output",
 CellChangeTimes->{{3.5037918325300045`*^9, 3.5037918444416857`*^9}, 
   3.5037919137126484`*^9, {3.5037920040348144`*^9, 3.5037920111202197`*^9}, 
   3.503792149492134*^9, 3.5037924954109197`*^9, 3.503792666195688*^9, 
   3.5037952862525463`*^9, 3.5037954576933527`*^9, 3.5037986677079544`*^9, 
   3.5037987106404104`*^9, 3.503800652586483*^9, 3.5038013458191338`*^9, 
   3.503801468748165*^9, {3.503801539311201*^9, 3.5038015484287224`*^9}, {
   3.503801593716313*^9, 3.503801646272319*^9}, 3.503801721736635*^9, {
   3.5038018339550533`*^9, 3.5038018634427404`*^9}, {3.5038029508879385`*^9, 
   3.5038029622725897`*^9}, 3.503944348686849*^9, 3.5039446675927362`*^9, 
   3.5039448037433505`*^9, 3.503944885855561*^9, 3.503944956704645*^9, {
   3.504029260846569*^9, 3.5040292734422894`*^9}, 3.5040293752461123`*^9}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Re", "[", "p", "]"}], ">", "0"}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"p", " ", "q"}], "+", "r"}], 
    RowBox[{"2", " ", 
     SuperscriptBox["p", "2"]}]], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "p"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "x1"}], ")"}], "2"]}]], " ", 
      RowBox[{"(", 
       RowBox[{"q", "+", 
        RowBox[{"r", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "x1"}], ")"}], "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"x", "-", "x1"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "x1", ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{
       RowBox[{"Re", "[", "p", "]"}], "\[LessEqual]", "0"}]}]}], "]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.5037918325300045`*^9, 3.5037918444416857`*^9}, 
   3.5037919137126484`*^9, {3.5037920040348144`*^9, 3.5037920111202197`*^9}, 
   3.503792149492134*^9, 3.5037924954109197`*^9, 3.503792666195688*^9, 
   3.5037952862525463`*^9, 3.5037954576933527`*^9, 3.5037986677079544`*^9, 
   3.5037987106404104`*^9, 3.503800652586483*^9, 3.5038013458191338`*^9, 
   3.503801468748165*^9, {3.503801539311201*^9, 3.5038015484287224`*^9}, {
   3.503801593716313*^9, 3.503801646272319*^9}, 3.503801721736635*^9, {
   3.5038018339550533`*^9, 3.5038018634427404`*^9}, {3.5038029508879385`*^9, 
   3.5038029622725897`*^9}, 3.503944348686849*^9, 3.5039446675927362`*^9, 
   3.5039448037433505`*^9, 3.503944885855561*^9, 3.503944956704645*^9, {
   3.504029260846569*^9, 3.5040292734422894`*^9}, 3.504029376825203*^9}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Re", "[", "p", "]"}], ">", "0"}], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "p"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x1", "-", "xt"}], ")"}], "2"]}]], " ", 
     RowBox[{"(", 
      RowBox[{"r", "+", 
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{"q", "+", 
          RowBox[{"r", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x1", "-", "xt"}], ")"}], "2"]}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"2", " ", 
     SuperscriptBox["p", "2"]}]], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "p"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "x1"}], ")"}], "2"]}]], " ", 
      RowBox[{"(", 
       RowBox[{"q", "+", 
        RowBox[{"r", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "x1"}], ")"}], "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"x", "-", "x1"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "xt", ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{
       RowBox[{"Re", "[", "p", "]"}], "\[LessEqual]", "0"}]}]}], "]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.5037918325300045`*^9, 3.5037918444416857`*^9}, 
   3.5037919137126484`*^9, {3.5037920040348144`*^9, 3.5037920111202197`*^9}, 
   3.503792149492134*^9, 3.5037924954109197`*^9, 3.503792666195688*^9, 
   3.5037952862525463`*^9, 3.5037954576933527`*^9, 3.5037986677079544`*^9, 
   3.5037987106404104`*^9, 3.503800652586483*^9, 3.5038013458191338`*^9, 
   3.503801468748165*^9, {3.503801539311201*^9, 3.5038015484287224`*^9}, {
   3.503801593716313*^9, 3.503801646272319*^9}, 3.503801721736635*^9, {
   3.5038018339550533`*^9, 3.5038018634427404`*^9}, {3.5038029508879385`*^9, 
   3.5038029622725897`*^9}, 3.503944348686849*^9, 3.5039446675927362`*^9, 
   3.5039448037433505`*^9, 3.503944885855561*^9, 3.503944956704645*^9, {
   3.504029260846569*^9, 3.5040292734422894`*^9}, 3.5040293780282717`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "p", "]"}], ">", "0"}], ",", 
    FractionBox[
     RowBox[{
      SqrtBox["\[Pi]"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "p", " ", "q"}], "+", 
        RowBox[{"3", " ", "r"}]}], ")"}]}], 
     RowBox[{"4", " ", 
      SqrtBox["p"]}]], ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "p"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x1", "-", "xt"}], ")"}], "2"]}]], " ", 
       RowBox[{"(", 
        RowBox[{"r", "+", 
         RowBox[{"p", " ", 
          RowBox[{"(", 
           RowBox[{"q", "+", 
            RowBox[{"r", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"x1", "-", "xt"}], ")"}], "2"]}]}], ")"}]}]}], ")"}]}],
       ",", 
      RowBox[{"{", 
       RowBox[{"xt", ",", "x1", ",", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{
        RowBox[{"Re", "[", "p", "]"}], "\[LessEqual]", "0"}]}]}], "]"}]}], 
   "]"}], 
  RowBox[{"2", " ", 
   SuperscriptBox["p", "2"]}]]], "Output",
 CellChangeTimes->{{3.5037918325300045`*^9, 3.5037918444416857`*^9}, 
   3.5037919137126484`*^9, {3.5037920040348144`*^9, 3.5037920111202197`*^9}, 
   3.503792149492134*^9, 3.5037924954109197`*^9, 3.503792666195688*^9, 
   3.5037952862525463`*^9, 3.5037954576933527`*^9, 3.5037986677079544`*^9, 
   3.5037987106404104`*^9, 3.503800652586483*^9, 3.5038013458191338`*^9, 
   3.503801468748165*^9, {3.503801539311201*^9, 3.5038015484287224`*^9}, {
   3.503801593716313*^9, 3.503801646272319*^9}, 3.503801721736635*^9, {
   3.5038018339550533`*^9, 3.5038018634427404`*^9}, {3.5038029508879385`*^9, 
   3.5038029622725897`*^9}, 3.503944348686849*^9, 3.5039446675927362`*^9, 
   3.5039448037433505`*^9, 3.503944885855561*^9, 3.503944956704645*^9, {
   3.504029260846569*^9, 3.5040292734422894`*^9}, 3.504029381288458*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"q", "==", 
        FractionBox[
         RowBox[{"B0", "*", "2", "*", "\[Pi]"}], "\[Lambda]u"]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"p", " ", "q"}], "+", "r"}], 
         RowBox[{"2", " ", 
          SuperscriptBox["p", "2"]}]], "==", 
        FractionBox[
         RowBox[{"\[Lambda]u", "*", "B0"}], 
         RowBox[{"2", "*", "\[Pi]"}]]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        FractionBox[
         FractionBox[
          RowBox[{
           SqrtBox["\[Pi]"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "p", " ", "q"}], "+", 
             RowBox[{"3", " ", "r"}]}], ")"}]}], 
          RowBox[{"4", " ", 
           SqrtBox["p"]}]], 
         RowBox[{"2", " ", 
          SuperscriptBox["p", "2"]}]], "\[Equal]", "0"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "r", ",", "p"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.5037919244652634`*^9, 3.503791986042785*^9}, {
   3.5037920205797606`*^9, 3.503792067385438*^9}, {3.5037921606937747`*^9, 
   3.503792164599998*^9}, {3.503792518936265*^9, 3.503792585682083*^9}, {
   3.5037927300033374`*^9, 3.5037927617001505`*^9}, {3.5037952015157*^9, 
   3.5037952121773095`*^9}, {3.503795341574711*^9, 3.503795382722064*^9}, {
   3.503795500245786*^9, 3.503795552029748*^9}, {3.503800669827469*^9, 
   3.503800704242438*^9}, 3.503801315178381*^9, {3.5038018896332383`*^9, 
   3.5038019570330935`*^9}, {3.5038019962213345`*^9, 3.5038020408778887`*^9}, 
   3.5038030019518595`*^9, {3.503945015251499*^9, 3.5039450186558394`*^9}, {
   3.503945149056878*^9, 3.503945162397212*^9}, 3.503945201236431*^9, {
   3.5039452519054313`*^9, 3.5039453019284315`*^9}, {3.503945380367431*^9, 
   3.503945430674431*^9}, {3.5040294816021957`*^9, 3.50402951332101*^9}, {
   3.5040295501491165`*^9, 3.5040295869032183`*^9}, {3.5040296284075923`*^9, 
   3.504029647405679*^9}, {3.50402973239554*^9, 3.5040297677695637`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"r", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"8", " ", "B0", " ", 
        SuperscriptBox["\[Pi]", "3"]}], 
       RowBox[{"9", " ", 
        SuperscriptBox["\[Lambda]u", "3"]}]]}]}], ",", 
    RowBox[{"q", "\[Rule]", 
     FractionBox[
      RowBox[{"2", " ", "B0", " ", "\[Pi]"}], "\[Lambda]u"]}], ",", 
    RowBox[{"p", "\[Rule]", 
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["\[Pi]", "2"]}], 
      RowBox[{"3", " ", 
       SuperscriptBox["\[Lambda]u", "2"]}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.504029770972747*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"B0", "=", "1.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]u", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x1", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p", "=", 
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["\[Pi]", "2"]}], 
      RowBox[{"3", " ", 
       SuperscriptBox["\[Lambda]u", "2"]}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"q", "=", 
     FractionBox[
      RowBox[{"2", " ", "B0", " ", "\[Pi]"}], "\[Lambda]u"]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"8", " ", "B0", " ", 
        SuperscriptBox["\[Pi]", "3"]}], 
       RowBox[{"9", " ", 
        SuperscriptBox["\[Lambda]u", "3"]}]]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FF", "[", "x_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"x", "<", "x1"}], ",", 
       RowBox[{"B0", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"2", "*", "\[Pi]"}], "\[Lambda]u"], "*", "x"}], "]"}]}], 
       ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"q", "*", 
           RowBox[{"(", 
            RowBox[{"x", "-", "x1"}], ")"}]}], "+", 
          RowBox[{"r", "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "-", "x1"}], ")"}], "3"]}]}], ")"}], "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "p"}], "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "-", "x1"}], ")"}], "2"]}], "]"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"FF", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"-", "2"}], "*", "\[Lambda]u"}], ",", 
       RowBox[{"4", "*", "\[Lambda]u"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.503802110491871*^9, 3.50380217342247*^9}, {
   3.5038022239103575`*^9, 3.503802424866852*^9}, {3.5038024552295885`*^9, 
   3.5038026179168935`*^9}, {3.503802671119937*^9, 3.5038028304330487`*^9}, {
   3.5038028611398053`*^9, 3.503802886483255*^9}, 3.5038030344607186`*^9, {
   3.5038031408128014`*^9, 3.5038032056065073`*^9}, {3.5038034118213024`*^9, 
   3.5038034217768717`*^9}, {3.5038034998373365`*^9, 3.503803516106267*^9}, {
   3.5038040768983426`*^9, 3.5038040824396596`*^9}, {3.503882832263568*^9, 
   3.5038828364755754`*^9}, {3.50403049939641*^9, 3.5040305799970202`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
wgrkDz5q+h+ucCG+c9GHrSNH/h91jM9q
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.5038028335152254`*^9, 3.5038028882433558`*^9}, 
   3.5038032094167256`*^9, 3.5038034244770265`*^9, {3.503804077574381*^9, 
   3.503804082937688*^9}, 3.5040305854053297`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"g", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"q", "*", 
         RowBox[{"(", 
          RowBox[{"x", "-", "x1"}], ")"}]}], "+", 
        RowBox[{"r", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "x1"}], ")"}], "3"]}]}], ")"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "p"}], "*", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "x1"}], ")"}], "2"]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gi", "=", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "p"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x1", "-", "xt"}], ")"}], "2"]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "r"}], "-", 
         RowBox[{"p", " ", 
          RowBox[{"(", 
           RowBox[{"q", "+", 
            RowBox[{"r", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"x1", "-", "xt"}], ")"}], "2"]}]}], ")"}]}]}], ")"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["p", "2"]}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{"g", "/.", 
     RowBox[{"x", "\[Rule]", "x1"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[PartialD]", "x"], " ", "g"}], "/.", 
     RowBox[{"x", "\[Rule]", "x1"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "x1"], 
     RowBox[{"g", 
      RowBox[{"\[DifferentialD]", "x"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "xt"], 
     RowBox[{"g", 
      RowBox[{"\[DifferentialD]", "x"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "x1"], 
     RowBox[{"gi", 
      RowBox[{"\[DifferentialD]", "xt"}]}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.503803621476294*^9, 3.503803660168507*^9}, {
   3.503804039485203*^9, 3.5038040468926263`*^9}, {3.5038041088491697`*^9, 
   3.503804171473752*^9}, {3.503804225654851*^9, 3.5038042362574577`*^9}, {
   3.5038881088842616`*^9, 3.5038881281013603`*^9}, {3.5038881806003637`*^9, 
   3.5038882248528943`*^9}, 3.503888276239834*^9, {3.503888369149148*^9, 
   3.5038883754375076`*^9}, {3.5038884250103426`*^9, 
   3.5038884881399536`*^9}, {3.503888736642167*^9, 3.5038887380112457`*^9}, {
   3.5038895438163347`*^9, 3.5038895447203865`*^9}, {3.5039223546945567`*^9, 
   3.503922406779536*^9}, 3.5039224647238503`*^9, {3.503926706482465*^9, 
   3.5039267183161416`*^9}, {3.503933208310931*^9, 3.5039332293620358`*^9}, {
   3.5039332718882885`*^9, 3.5039332748435836`*^9}, {3.5039336017282686`*^9, 
   3.5039336081959157`*^9}, 3.503933893535447*^9, 3.5039340101140013`*^9, 
   3.503941310611849*^9, {3.5039650072907934`*^9, 3.503965008668872*^9}, {
   3.503965064724078*^9, 3.503965106528469*^9}, 3.503970869281598*^9, {
   3.5039709338462915`*^9, 3.5039709503352346`*^9}, {3.5039716206819334`*^9, 
   3.503971665507497*^9}, {3.5039717353854938`*^9, 3.5039717779879303`*^9}, {
   3.503974066104803*^9, 3.503974077425451*^9}, {3.5039741335306597`*^9, 
   3.5039741455023446`*^9}, {3.504030087774867*^9, 3.5040300883789015`*^9}, {
   3.504030179216097*^9, 3.504030180562174*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.5038040985935836`*^9, 3.5038041767980566`*^9, 3.50388813717788*^9, 
   3.5038882291171384`*^9, 3.5038883811378336`*^9, 3.5038884921761847`*^9, 
   3.5038887413884387`*^9, 3.5038895607993064`*^9, 3.5039224289418035`*^9, 
   3.5039224668149695`*^9, 3.5039267873460903`*^9, 3.503932730141514*^9, 
   3.5039332905561547`*^9, 3.5039336814442396`*^9, 3.5039339029083843`*^9, 
   3.5039340253840013`*^9, {3.5039716704777813`*^9, 3.5039716864406943`*^9}, 
   3.5039717829042115`*^9, {3.5039740809376516`*^9, 3.5039740930073423`*^9}, 
   3.503974149985601*^9, 3.50403009080904*^9, 3.5040301875705748`*^9}],

Cell[BoxData["q"], "Output",
 CellChangeTimes->{
  3.5038040985935836`*^9, 3.5038041767980566`*^9, 3.50388813717788*^9, 
   3.5038882291171384`*^9, 3.5038883811378336`*^9, 3.5038884921761847`*^9, 
   3.5038887413884387`*^9, 3.5038895607993064`*^9, 3.5039224289418035`*^9, 
   3.5039224668149695`*^9, 3.5039267873460903`*^9, 3.503932730141514*^9, 
   3.5039332905561547`*^9, 3.5039336814442396`*^9, 3.5039339029083843`*^9, 
   3.5039340253840013`*^9, {3.5039716704777813`*^9, 3.5039716864406943`*^9}, 
   3.5039717829042115`*^9, {3.5039740809376516`*^9, 3.5039740930073423`*^9}, 
   3.503974149985601*^9, 3.50403009080904*^9, 3.504030187573575*^9}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Re", "[", "p", "]"}], ">", "0"}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"p", " ", "q"}], "+", "r"}], 
     RowBox[{"2", " ", 
      SuperscriptBox["p", "2"]}]]}], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "p"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "x1"}], ")"}], "2"]}]], " ", 
      RowBox[{"(", 
       RowBox[{"q", "+", 
        RowBox[{"r", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "x1"}], ")"}], "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"x", "-", "x1"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "x1"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{
       RowBox[{"Re", "[", "p", "]"}], "\[LessEqual]", "0"}]}]}], "]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.5038040985935836`*^9, 3.5038041767980566`*^9, 3.50388813717788*^9, 
   3.5038882291171384`*^9, 3.5038883811378336`*^9, 3.5038884921761847`*^9, 
   3.5038887413884387`*^9, 3.5038895607993064`*^9, 3.5039224289418035`*^9, 
   3.5039224668149695`*^9, 3.5039267873460903`*^9, 3.503932730141514*^9, 
   3.5039332905561547`*^9, 3.5039336814442396`*^9, 3.5039339029083843`*^9, 
   3.5039340253840013`*^9, {3.5039716704777813`*^9, 3.5039716864406943`*^9}, 
   3.5039717829042115`*^9, {3.5039740809376516`*^9, 3.5039740930073423`*^9}, 
   3.503974149985601*^9, 3.50403009080904*^9, 3.5040301929618835`*^9}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Re", "[", "p", "]"}], ">", "0"}], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "p"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x1", "-", "xt"}], ")"}], "2"]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "r"}], "-", 
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{"q", "+", 
          RowBox[{"r", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x1", "-", "xt"}], ")"}], "2"]}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"2", " ", 
     SuperscriptBox["p", "2"]}]], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "p"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "x1"}], ")"}], "2"]}]], " ", 
      RowBox[{"(", 
       RowBox[{"q", "+", 
        RowBox[{"r", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "x1"}], ")"}], "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"x", "-", "x1"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "xt"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{
       RowBox[{"Re", "[", "p", "]"}], "\[LessEqual]", "0"}]}]}], "]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.5038040985935836`*^9, 3.5038041767980566`*^9, 3.50388813717788*^9, 
   3.5038882291171384`*^9, 3.5038883811378336`*^9, 3.5038884921761847`*^9, 
   3.5038887413884387`*^9, 3.5038895607993064`*^9, 3.5039224289418035`*^9, 
   3.5039224668149695`*^9, 3.5039267873460903`*^9, 3.503932730141514*^9, 
   3.5039332905561547`*^9, 3.5039336814442396`*^9, 3.5039339029083843`*^9, 
   3.5039340253840013`*^9, {3.5039716704777813`*^9, 3.5039716864406943`*^9}, 
   3.5039717829042115`*^9, {3.5039740809376516`*^9, 3.5039740930073423`*^9}, 
   3.503974149985601*^9, 3.50403009080904*^9, 3.5040301963990793`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "p", "]"}], ">", "0"}], ",", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SqrtBox["\[Pi]"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "p", " ", "q"}], "+", 
         RowBox[{"3", " ", "r"}]}], ")"}]}], 
      RowBox[{"4", " ", 
       SqrtBox["p"]}]]}], ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "p"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x1", "-", "xt"}], ")"}], "2"]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "r"}], "-", 
         RowBox[{"p", " ", 
          RowBox[{"(", 
           RowBox[{"q", "+", 
            RowBox[{"r", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"x1", "-", "xt"}], ")"}], "2"]}]}], ")"}]}]}], ")"}]}],
       ",", 
      RowBox[{"{", 
       RowBox[{"xt", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "x1"}], "}"}], ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{
        RowBox[{"Re", "[", "p", "]"}], "\[LessEqual]", "0"}]}]}], "]"}]}], 
   "]"}], 
  RowBox[{"2", " ", 
   SuperscriptBox["p", "2"]}]]], "Output",
 CellChangeTimes->{
  3.5038040985935836`*^9, 3.5038041767980566`*^9, 3.50388813717788*^9, 
   3.5038882291171384`*^9, 3.5038883811378336`*^9, 3.5038884921761847`*^9, 
   3.5038887413884387`*^9, 3.5038895607993064`*^9, 3.5039224289418035`*^9, 
   3.5039224668149695`*^9, 3.5039267873460903`*^9, 3.503932730141514*^9, 
   3.5039332905561547`*^9, 3.5039336814442396`*^9, 3.5039339029083843`*^9, 
   3.5039340253840013`*^9, {3.5039716704777813`*^9, 3.5039716864406943`*^9}, 
   3.5039717829042115`*^9, {3.5039740809376516`*^9, 3.5039740930073423`*^9}, 
   3.503974149985601*^9, 3.50403009080904*^9, 3.504030197682153*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"q", "==", 
        FractionBox[
         RowBox[{"B0", "*", "2", "*", "\[Pi]"}], "\[Lambda]u"]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"p", " ", "q"}], "+", "r"}], 
          RowBox[{"2", " ", 
           SuperscriptBox["p", "2"]}]]}], "==", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "\[Lambda]u"}], "*", "B0"}], 
         RowBox[{"2", "*", "\[Pi]"}]]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        FractionBox[
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SqrtBox["\[Pi]"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "p", " ", "q"}], "+", 
              RowBox[{"3", " ", "r"}]}], ")"}]}], 
           RowBox[{"4", " ", 
            SqrtBox["p"]}]]}], 
         RowBox[{"2", "*", 
          SuperscriptBox["p", "2"]}]], "\[Equal]", "0"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "r", ",", "p"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.5038042393716354`*^9, 3.503804265571134*^9}, {
   3.5038042968249216`*^9, 3.5038043350391073`*^9}, {3.503804745444581*^9, 
   3.5038047521649656`*^9}, 3.5038050831278954`*^9, {3.503805115247733*^9, 
   3.5038051287395043`*^9}, {3.5038051644365463`*^9, 
   3.5038051670916977`*^9}, {3.503888780355667*^9, 3.503888816696746*^9}, {
   3.5038888606102576`*^9, 3.5038889124152207`*^9}, {3.503922497438721*^9, 
   3.503922508118332*^9}, {3.503922541917265*^9, 3.5039225532189116`*^9}, {
   3.5039226091531105`*^9, 3.503922630355324*^9}, {3.5039227846061463`*^9, 
   3.5039228430124865`*^9}, 3.503922899065693*^9, {3.503922975489064*^9, 
   3.503923000152475*^9}, {3.50392317036421*^9, 3.503923507908517*^9}, {
   3.503923643686283*^9, 3.503923656867037*^9}, {3.5039242024722433`*^9, 
   3.5039242384653025`*^9}, {3.5039244365556326`*^9, 3.503924437108664*^9}, {
   3.503924492743846*^9, 3.5039245138870554`*^9}, {3.5039246215212116`*^9, 
   3.503924626640505*^9}, {3.503931876631171*^9, 3.503931877048213*^9}, 
   3.5039324480603085`*^9, {3.503932756078107*^9, 3.503932759357435*^9}, {
   3.5039327967346115`*^9, 3.5039327973136115`*^9}, {3.503933319627062*^9, 
   3.50393345752485*^9}, {3.5039335543395305`*^9, 3.5039335688629827`*^9}, 
   3.5039337342375183`*^9, {3.5039337687689714`*^9, 3.5039338632624197`*^9}, 
   3.503933943842001*^9, {3.5039413904978485`*^9, 3.503941427086709*^9}, {
   3.50394319636864*^9, 3.5039432200496397`*^9}, {3.5039432738866396`*^9, 
   3.50394330252164*^9}, {3.5039433556816397`*^9, 3.5039434229046392`*^9}, {
   3.503943780306017*^9, 3.503943797063692*^9}, 3.503943831265112*^9, {
   3.503943931486133*^9, 3.5039439382168064`*^9}, {3.503945451297431*^9, 
   3.503945507335431*^9}, {3.5039458385434313`*^9, 3.5039459027464314`*^9}, {
   3.50397172097567*^9, 3.5039717267910023`*^9}, 3.5039718783246694`*^9, 
   3.5039721497761955`*^9, {3.5039722411394215`*^9, 3.503972259542474*^9}, {
   3.5039723380919666`*^9, 3.5039723833925576`*^9}, {3.503974210516063*^9, 
   3.5039742560336666`*^9}, {3.504030012920585*^9, 3.50403001335061*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"r", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"8", " ", "B0", " ", 
        SuperscriptBox["\[Pi]", "3"]}], 
       RowBox[{"9", " ", 
        SuperscriptBox["\[Lambda]u", "3"]}]]}]}], ",", 
    RowBox[{"q", "\[Rule]", 
     FractionBox[
      RowBox[{"2", " ", "B0", " ", "\[Pi]"}], "\[Lambda]u"]}], ",", 
    RowBox[{"p", "\[Rule]", 
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["\[Pi]", "2"]}], 
      RowBox[{"3", " ", 
       SuperscriptBox["\[Lambda]u", "2"]}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.503805093555492*^9, 3.5038051293305387`*^9}, 
   3.5038051680417523`*^9, 3.5038889287831573`*^9, 3.5039230144952955`*^9, 
   3.503923091437696*^9, 3.5039235187741385`*^9, {3.503924498024148*^9, 
   3.503924514472089*^9}, 3.5039246276985655`*^9, {3.5039318916116695`*^9, 
   3.503931903361844*^9}, 3.503932450334536*^9, 3.5039328017016115`*^9, 
   3.5039338674398375`*^9, 3.503941447206721*^9, 3.5039415530653057`*^9, 
   3.5039433072276397`*^9, 3.5039433600786395`*^9, {3.5039434121776395`*^9, 
   3.5039434285916395`*^9}, 3.503943798480834*^9, 3.503943832715257*^9, 
   3.5039439427262573`*^9, 3.503945515065431*^9, 3.503945912176431*^9, 
   3.5039723914660196`*^9, 3.503974261416974*^9, 3.504030023183172*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"B0", "=", "1.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]u", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x1", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p", "=", 
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["\[Pi]", "2"]}], 
      RowBox[{"3", " ", 
       SuperscriptBox["\[Lambda]u", "2"]}]]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     FractionBox[
      SqrtBox[
       RowBox[{"144", "-", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Pi]", "2"]}]}]], "\[Lambda]u"], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"q", "=", 
     FractionBox[
      RowBox[{"2", " ", "B0", " ", "\[Pi]"}], "\[Lambda]u"]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "B0", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "18"}], "+", 
         SuperscriptBox["\[Pi]", "2"]}], ")"}]}], 
      RowBox[{"\[Pi]", " ", "\[Lambda]u"}]], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"8", " ", "B0", " ", 
        SuperscriptBox["\[Pi]", "3"]}], 
       RowBox[{"9", " ", 
        SuperscriptBox["\[Lambda]u", "3"]}]]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "=", 
      FractionBox[
       RowBox[{
        RowBox[{"(", "676.8426868771007`", "\[InvisibleSpace]", ")"}], " ", 
        "B0"}], 
       SuperscriptBox["\[Lambda]u", "3"]]}], ";", 
     RowBox[{"(*", 
      RowBox[{
       FractionBox[
        RowBox[{"16", " ", "B0", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "9"}], "+", 
           SuperscriptBox["\[Pi]", "2"]}], ")"}]}], 
        RowBox[{"\[Pi]", " ", 
         SuperscriptBox["\[Lambda]u", "3"]}]], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      FractionBox[
       RowBox[{"0.5`", " ", "B0", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", "701.9754281058191`", "\[InvisibleSpace]", ")"}], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", "4061.0561212626044`", "\[InvisibleSpace]", ")"}], 
            " ", "x1"}], "\[Lambda]u"]}], ")"}]}], 
       SuperscriptBox["\[Lambda]u", "2"]]}], ";", 
     RowBox[{"(*", 
      RowBox[{
       FractionBox[
        RowBox[{"12", " ", "B0", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "9"}], "+", 
              SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", "x1"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", "\[Lambda]u"}]}], 
          ")"}]}], 
        RowBox[{"\[Pi]", " ", 
         SuperscriptBox["\[Lambda]u", "3"]}]], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      FractionBox[
       RowBox[{"B0", " ", 
        RowBox[{"(", 
         RowBox[{"6.283185307179586`", "\[InvisibleSpace]", "+", 
          FractionBox[
           RowBox[{
            RowBox[{"(", "2030.5280606313022`", "\[InvisibleSpace]", ")"}], 
            " ", 
            SuperscriptBox["x1", "2"]}], 
           SuperscriptBox["\[Lambda]u", "2"]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", "701.9754281058191`", "\[InvisibleSpace]", ")"}], 
            " ", "x1"}], "\[Lambda]u"]}], ")"}]}], "\[Lambda]u"]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", "B0", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"24", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "9"}], "+", 
              SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", 
            SuperscriptBox["x1", "2"]}], "-", 
           RowBox[{"12", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", "x1", " ", 
            "\[Lambda]u"}], "+", 
           RowBox[{
            SuperscriptBox["\[Pi]", "2"], " ", 
            SuperscriptBox["\[Lambda]u", "2"]}]}], ")"}]}], 
        RowBox[{"\[Pi]", " ", 
         SuperscriptBox["\[Lambda]u", "3"]}]], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      FractionBox[
       RowBox[{"0.5`", " ", "B0", " ", "x1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "12.566370614359172`"}], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", "1353.6853737542015`", ")"}], " ", 
            SuperscriptBox["x1", "2"]}], 
           SuperscriptBox["\[Lambda]u", "2"]], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"(", "701.9754281058191`", "\[InvisibleSpace]", ")"}], 
            " ", "x1"}], "\[Lambda]u"]}], ")"}]}], "\[Lambda]u"]}], ";"}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FFR", "[", "x_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"x", "<", "x1"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"q", "*", 
           RowBox[{"(", 
            RowBox[{"x", "-", "x1"}], ")"}]}], "+", 
          RowBox[{"r", "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "-", "x1"}], ")"}], "3"]}]}], ")"}], "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "p"}], "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "-", "x1"}], ")"}], "2"]}], "]"}]}], ",", 
       RowBox[{"B0", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"2", "*", "\[Pi]"}], "\[Lambda]u"], "*", "x"}], "]"}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"I1FF", "[", "x_", "]"}], ":=", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"FFR", "[", "xx", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"xx", ",", 
         RowBox[{
          RowBox[{"-", "4"}], "*", "\[Lambda]u"}], ",", "x"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"I2FF", "[", "x_", "]"}], ":=", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{"gi", ",", 
       RowBox[{"{", 
        RowBox[{"xx", ",", 
         RowBox[{
          RowBox[{"-", "4"}], "*", "\[Lambda]u"}], ",", "x"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"FFR", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"-", "4"}], "*", "\[Lambda]u"}], ",", 
       RowBox[{"4", "*", "\[Lambda]u"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"I2FF", "[", "x", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"-", "4"}], "*", "\[Lambda]u"}], ",", 
         RowBox[{"4", "*", "\[Lambda]u"}], ",", 
         RowBox[{"\[Lambda]u", "/", "20."}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.5038041998123727`*^9, 3.503804200755427*^9}, {
   3.5038043851819754`*^9, 3.503804572826708*^9}, {3.503804789110079*^9, 
   3.50380488966483*^9}, {3.5038049974579954`*^9, 3.503805001891249*^9}, {
   3.50380518180954*^9, 3.5038052574818683`*^9}, {3.5038053065126724`*^9, 
   3.503805426737549*^9}, {3.5038055294234223`*^9, 3.503805659172844*^9}, {
   3.503805717606186*^9, 3.5038057448827457`*^9}, {3.503805862895496*^9, 
   3.5038058803784957`*^9}, {3.5038513011956806`*^9, 
   3.5038513186756806`*^9}, {3.503861557463586*^9, 3.503861573204014*^9}, {
   3.503871371113223*^9, 3.5038714028592787`*^9}, {3.5038714579897757`*^9, 
   3.5038714912802343`*^9}, 3.503871534008709*^9, 3.5038716430373006`*^9, 
   3.503872020836179*^9, {3.503925093270194*^9, 3.503925115425462*^9}, {
   3.50392516242615*^9, 3.5039252588036623`*^9}, {3.503925296691829*^9, 
   3.5039253659797926`*^9}, {3.503925401880846*^9, 3.503925447434451*^9}, {
   3.5039256624147477`*^9, 3.5039258316944294`*^9}, {3.5039258884016733`*^9, 
   3.5039260489748573`*^9}, 3.5039319861461215`*^9, 3.5039321719216976`*^9, {
   3.5039324910856104`*^9, 3.5039325421307144`*^9}, {3.5039328384026117`*^9, 
   3.503932927390842*^9}, 3.5039415192709265`*^9, {3.503941585802579*^9, 
   3.5039416149804964`*^9}, {3.503941661469145*^9, 3.503941762867284*^9}, {
   3.5039417983798347`*^9, 3.503941813086305*^9}, {3.503945609177431*^9, 
   3.5039457003524313`*^9}, {3.503945949591431*^9, 3.5039461089728746`*^9}, {
   3.5039724471422043`*^9, 3.503972527939825*^9}, 3.5039725608667088`*^9, {
   3.503972785267544*^9, 3.503972807919839*^9}, {3.503972927782695*^9, 
   3.5039729482618666`*^9}, {3.503973510842044*^9, 3.5039735527814426`*^9}, {
   3.5040303867619677`*^9, 3.5040304391689653`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
7XTJxihcPPYyVpkUwHh/dsouG3k4Ox7aDJwj/bz3WmijVTZ2T02+zzt7nmTz
b4vmrmvZqMWS6/ekSpXU63PR94RBNsZH9IV/UL1AqvPq7LdQy0YD86DDU081
SLJyJOMfitloxTvjyuNwifRipfDjPflsTJk3FK2haJFKvO+3ZEhlY+1B689N
Wdqkg8Ts+cMH1v0J9N5BLtMh5f01/O+l6Hp9bB6LvF90SZm+R1/27MhGAYWh
J0a6BiQBSD91gzMbHTjG2FeLDUmJ/7Y8XWTORtOmz8rzfMakqHsD+VyrVLRc
HjvGLHWVxHr24l7yEhWvu8q9cf56jRS0oSJTcp6K/cyrz3svmZJ8HkQlXBym
4ulj8ar3ZM1JvxWXt/V+peID0as61soWJLeNNyJsPlKxktGkg/GqJck+gPAP
fEtFvqbbt4Nrb5AmlAvXtjdQUeYJRXPvFhuS5eYdXtRqKjZ4aTL0mt8kmQTN
OGEJFQ0VLB756NqTPqsYzmgUULFdqi3PZ+YWSXfLa+tvFCqajKY3YaojST0k
7dqfeCpObdyyZpXlTHqruqU3OIqKjGeyhqLSXEjKLK56O0OoaHrh+0WzXFeS
fNgF9RN3qdikP+A+MepOqrzw4s0rNyqess1I3y/oSTrJJqqk5UDF30p5G8Qt
b5MOR/w5c8uMis3PXs+OHbhLKlC3Kl8xpuI6CLKFFnqTxNg7jobpUjG/oKi4
iPAlCUYV7M8/T8UI63bN3q57pGRNnuxTZ6nYYV+YQsf7JB7Oe8KvZdf9PP8w
LrryAWlrjMGOoSNUzBH1Vv7dEUAK0fovxnE/Fbk+hkzuXQwkbeKS2rq2Z92v
SdevyfuCSSuxTBt38VDxV79tjH9VKMlD28W3kH0939SiV45QOOkHd/8f6S1U
/Hu9etYqPoI09bCcprtMwWsFiclJtdGkG7oi9iMLFEzevGEDU1UMaZgnctx5
loL35oKkEzJjSb0Jlv1RgxTce+sx21rkQ5K+fruRUC8F+UUcuDhT4kmdO+U/
PuqioK4IJXr0aQLpfdL2lrdNFHyVbj5G5kwmqRj6nTeop2DPTZnhNb0UUgPf
dMP3KgqKU+bNtj1OJb1MaahifExBy70DXZSYDJIlA1s5Ux4FPStrmomzWSRO
a51S1iwKCoxRn30NIJMsT47mccdSUNWEcfmpK5XEkXaYujOMgsxMug8K/LJJ
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
yQcOT8sMuh6D/v9/vLDUXSbed5L7+v8An9bvcw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.5039729498689585`*^9, 3.5039744863858423`*^9, 
  3.504030443392207*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NIntegrate", "::", "\<\"inumr\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"The integrand \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(1.8478768058431807`*^-9\\\\ \
\[ExponentialE]\\^\\(\\(\\(-16449.340668482262`\\)\\)\\\\ xt\\^2\\)\\\\ \
\\(\\((3.7896560387033103`*^6 - \\(\\(16449.340668482262`\\\\ \
\\(\\((\\(\\(345.57519189487726` \[InvisibleSpace]\\)\\) - \
\\(\\(3.7896560387033103`*^6\\\\ xt\\^2\\)\\))\\)\\)\\)\\))\\)\\)\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" has evaluated to \
non-numerical values for all sampling points in the region with boundaries \\\
\\\\\"\\\", \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\({\\({\\(\\(-0.08`\
\\)\\), \\(\\(-0.079`\\)\\)}\\)}\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\".\\\\\\\"\\\", \\\"MT\\\
\"]\\) \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", ButtonNote -> \
\\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5039729499449625`*^9, 3.503974486486848*^9, 
  3.504030443487212*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NIntegrate", "::", "\<\"inumr\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"The integrand \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(1.8478768058431807`*^-9\\\\ \
\[ExponentialE]\\^\\(\\(\\(-16449.340668482262`\\)\\)\\\\ xt\\^2\\)\\\\ \
\\(\\((3.7896560387033103`*^6 - \\(\\(16449.340668482262`\\\\ \
\\(\\((\\(\\(345.57519189487726` \[InvisibleSpace]\\)\\) - \
\\(\\(3.7896560387033103`*^6\\\\ xt\\^2\\)\\))\\)\\)\\)\\))\\)\\)\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" has evaluated to \
non-numerical values for all sampling points in the region with boundaries \\\
\\\\\"\\\", \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\({\\({\\(\\(-0.08`\
\\)\\), \\(\\(-0.078`\\)\\)}\\)}\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\".\\\\\\\"\\\", \\\"MT\\\
\"]\\) \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", ButtonNote -> \
\\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5039729499449625`*^9, 3.503974486486848*^9, 
  3.5040304435412154`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NIntegrate", "::", "\<\"inumr\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"The integrand \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(1.8478768058431807`*^-9\\\\ \
\[ExponentialE]\\^\\(\\(\\(-16449.340668482262`\\)\\)\\\\ xt\\^2\\)\\\\ \
\\(\\((3.7896560387033103`*^6 - \\(\\(16449.340668482262`\\\\ \
\\(\\((\\(\\(345.57519189487726` \[InvisibleSpace]\\)\\) - \
\\(\\(3.7896560387033103`*^6\\\\ xt\\^2\\)\\))\\)\\)\\)\\))\\)\\)\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" has evaluated to \
non-numerical values for all sampling points in the region with boundaries \\\
\\\\\"\\\", \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\({\\({\\(\\(-0.08`\
\\)\\), \\(\\(-0.077`\\)\\)}\\)}\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\".\\\\\\\"\\\", \\\"MT\\\
\"]\\) \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", ButtonNote -> \
\\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5039729499449625`*^9, 3.503974486486848*^9, 
  3.5040304435902185`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"General", "::", "\<\"stop\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Further output of \\\\\\\"\\\
\", \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(NIntegrate :: \\\"inumr\\\
\"\\), \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" will be \
suppressed during this calculation.\\\\\\\"\\\", \\\"MT\\\"]\\) \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5039729499449625`*^9, 3.503974486486848*^9, 
  3.5040304436492214`*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[{{-0.08, 0.}}, {}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.5039729498689585`*^9, 3.5039744863858423`*^9, 
  3.504030445773343*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.5038044952092686`*^9, 3.5038044963603344`*^9}, 
   3.5038045453831387`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CForm", "[", 
  RowBox[{"q", "*", 
   RowBox[{"(", 
    RowBox[{"x", "-", "x1", "+", 
     RowBox[{"\[Lambda]u", "/", "2"}]}], ")"}], "*", 
   RowBox[{"Exp", "[", 
    RowBox[{"p", "*", 
     RowBox[{"(", 
      RowBox[{"x", "-", "x1", "+", 
       RowBox[{"\[Lambda]u", "/", "2"}]}], ")"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.503851329919324*^9, 3.503851337397752*^9}, 
   3.503851615932683*^9, 3.5038523015098953`*^9}],

Cell["\<\
(2*B0*Power(E,(Sqrt(144 - 8*Power(Pi,2))*(x - x1 + \
\[Lambda]u/2.))/\[Lambda]u)*(-18 + Power(Pi,2))*(x - x1 + \
\[Lambda]u/2.))/(Pi*\[Lambda]u)\
\>", "Output",
 CellChangeTimes->{3.5038513379767847`*^9, 3.503851616900738*^9, 
  3.503852303051984*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "Pi", "]"}]], "Input",
 CellChangeTimes->{{3.5038514109189568`*^9, 3.503851419178429*^9}}],

Cell[BoxData["3.141592653589793`"], "Output",
 CellChangeTimes->{{3.503851411658999*^9, 3.503851419594453*^9}}]
}, Open  ]],

Cell[BoxData["3.141592653589793`"], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"-", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{"17280", "-", 
       RowBox[{"960", " ", 
        SuperscriptBox["\[Pi]", "2"]}]}], 
      RowBox[{"54", "-", 
       SuperscriptBox["\[Pi]", "2"]}]], ")"}], 
    RowBox[{"1", "/", "3"}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.5038890734734325`*^9, 3.5038890755725527`*^9}, {
   3.503889115632844*^9, 3.5038891183640003`*^9}, 3.5038891583142853`*^9, 
   3.5038894289627657`*^9, {3.5038894596605215`*^9, 3.5038894641167765`*^9}}],

Cell[BoxData[
 RowBox[{"-", "5.613258335794664`"}]], "Output",
 CellChangeTimes->{3.5038890764916058`*^9, 3.5038891189250326`*^9, 
  3.5038891599933815`*^9, 3.5038894301368327`*^9, 3.503889464612805*^9}]
}, Open  ]]
},
WindowSize->{983, 968},
WindowMargins->{{446, Automatic}, {33, Automatic}},
FrontEndVersion->"7.0 for Microsoft Windows (64-bit) (February 18, 2009)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 3735, 90, 288, "Input"],
Cell[4305, 114, 846, 11, 30, "Output"],
Cell[5154, 127, 846, 11, 30, "Output"],
Cell[6003, 140, 1805, 43, 47, "Output"],
Cell[7811, 185, 2235, 57, 57, "Output"],
Cell[10049, 244, 2056, 52, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12142, 301, 2255, 50, 260, "Input"],
Cell[14400, 353, 652, 20, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15089, 378, 2785, 75, 308, "Input"],
Cell[17877, 455, 25544, 423, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43458, 883, 3700, 90, 288, "Input"],
Cell[47161, 975, 649, 9, 30, "Output"],
Cell[47813, 986, 647, 9, 30, "Output"],
Cell[48463, 997, 1657, 43, 47, "Output"],
Cell[50123, 1042, 2084, 57, 57, "Output"],
Cell[52210, 1101, 1937, 53, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54184, 1159, 3382, 67, 260, "Input"],
Cell[57569, 1228, 1344, 29, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58950, 1262, 9545, 252, 693, "Input"],
Cell[68498, 1516, 29719, 492, 238, "Output"],
Cell[98220, 2010, 1185, 20, 68, "Message"],
Cell[99408, 2032, 1187, 20, 68, "Message"],
Cell[100598, 2054, 1187, 20, 68, "Message"],
Cell[101788, 2076, 684, 12, 21, "Message"],
Cell[102475, 2090, 363, 9, 236, "Output"]
}, Open  ]],
Cell[102853, 2102, 143, 2, 52, "Input"],
Cell[CellGroupData[{
Cell[103021, 2108, 459, 12, 31, "Input"],
Cell[103483, 2122, 261, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103781, 2133, 123, 2, 31, "Input"],
Cell[103907, 2137, 111, 1, 30, "Output"]
}, Open  ]],
Cell[104033, 2141, 44, 0, 31, "Input"],
Cell[CellGroupData[{
Cell[104102, 2145, 551, 14, 54, "Input"],
Cell[104656, 2161, 203, 3, 30, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
